/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as CsvRouteImport } from './routes/csv'
import { Route as CreateRouteImport } from './routes/create'
import { Route as AutomationRouteImport } from './routes/automation'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TicketsStatusRouteImport } from './routes/tickets.$status'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const CsvRoute = CsvRouteImport.update({
  id: '/csv',
  path: '/csv',
  getParentRoute: () => rootRouteImport,
} as any)
const CreateRoute = CreateRouteImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => rootRouteImport,
} as any)
const AutomationRoute = AutomationRouteImport.update({
  id: '/automation',
  path: '/automation',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TicketsStatusRoute = TicketsStatusRouteImport.update({
  id: '/tickets/$status',
  path: '/tickets/$status',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/automation': typeof AutomationRoute
  '/create': typeof CreateRoute
  '/csv': typeof CsvRoute
  '/login': typeof LoginRoute
  '/tickets/$status': typeof TicketsStatusRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/automation': typeof AutomationRoute
  '/create': typeof CreateRoute
  '/csv': typeof CsvRoute
  '/login': typeof LoginRoute
  '/tickets/$status': typeof TicketsStatusRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/automation': typeof AutomationRoute
  '/create': typeof CreateRoute
  '/csv': typeof CsvRoute
  '/login': typeof LoginRoute
  '/tickets/$status': typeof TicketsStatusRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/automation'
    | '/create'
    | '/csv'
    | '/login'
    | '/tickets/$status'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/automation' | '/create' | '/csv' | '/login' | '/tickets/$status'
  id:
    | '__root__'
    | '/'
    | '/automation'
    | '/create'
    | '/csv'
    | '/login'
    | '/tickets/$status'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AutomationRoute: typeof AutomationRoute
  CreateRoute: typeof CreateRoute
  CsvRoute: typeof CsvRoute
  LoginRoute: typeof LoginRoute
  TicketsStatusRoute: typeof TicketsStatusRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/csv': {
      id: '/csv'
      path: '/csv'
      fullPath: '/csv'
      preLoaderRoute: typeof CsvRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/create': {
      id: '/create'
      path: '/create'
      fullPath: '/create'
      preLoaderRoute: typeof CreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/automation': {
      id: '/automation'
      path: '/automation'
      fullPath: '/automation'
      preLoaderRoute: typeof AutomationRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tickets/$status': {
      id: '/tickets/$status'
      path: '/tickets/$status'
      fullPath: '/tickets/$status'
      preLoaderRoute: typeof TicketsStatusRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AutomationRoute: AutomationRoute,
  CreateRoute: CreateRoute,
  CsvRoute: CsvRoute,
  LoginRoute: LoginRoute,
  TicketsStatusRoute: TicketsStatusRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
